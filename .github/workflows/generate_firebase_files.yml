name: Generate firebase configurations

on:
  workflow_call:
    inputs:
      runs_on:
        required: false
        type: string
        default: "ubuntu-latest"
      workspace:
        required: true
        type: string
      environment:
        required: false
        type: string
        default: "development"
      firebase-project:
        required: true
        type: string
        default: "development"
      working_directory:
        required: false
        type: string
        default: "."
    


      
jobs:
  build:
    runs-on: ${{ inputs.runs_on }}
    environment: ${{ inputs.env }}    

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          
      - name: 🎯 Setup Dart 
        uses: dart-lang/setup-dart@v1

      - name: 🔥 Setup Firebase-tools
        run: |
          sudo npm install firebase-tools --location=global
          
      - name: Clone flutterfire_cli docs repository
        uses: actions/checkout@v2        
        with:
          fetch-depth: 0
          repository: exaby73/flutterfire_cli           
          ref: 'feature/token-option'
          path: 'flutterfire'
      
      - name: ❤️ Show Files
        run: ls -la

      - name: 🔑 Decode Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: key.jks
          fileDir: apps/br_ipti_tag_app/android
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      
      - name: ⚙ Create key.properties
        working-directory: apps/br_ipti_tag_app
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          
      - name: ❤️‍🔥 Setup Flutterfire
        working-directory: flutterfire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite
          

      - name: 👩‍🚒 Generate Firebase Configuration Files
        working-directory: ${{inputs.working_directory}}
        run: |          
          flutterfire configure --project='${{ inputs.firebase-project }}' --platforms='android,ios,web,linux,windows' --android-package-name="${{secrets.ANDROID_PACKAGE_NAME}}" --ios-bundle-id=br.org.ipti.tag --macos-bundle-id=br.org.ipti.tag --token="${{ secrets.FIREBASE_TOKEN }}" -y
      
      - name: 🔼 Upload folder to build        
        uses: actions/upload-artifact@v3
        with:
          name: project_folder
          path: |
            apps/br_ipti_tag_app
            packages/tag_ui
            packages/tag_sdk
            packages/tag_network
            melos.yaml
            melos_tag.iml
