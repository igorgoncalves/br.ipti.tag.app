name: Deploy Android internal Channel
on:
  push:
    branches:
      - develop
      - 'ci/deploy_playstore'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:  
  build:
    name: Build   
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./br_ipti_tag_app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Setup Flutter        
        uses: subosito/flutter-action@v1
        with:
          flutter-version: '2.10.4'
      
      - name: Setup dart
        uses: dart-lang/setup-dart@v1
      
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-
      
      - name: Define build number 
        id: version_code
        env:
          RUN_NUMBER: ${{ github.run_number }}
          INITIAL_VERSION_CODE: 2
        run: |
          VERSION_CODE=$((INITIAL_VERSION_CODE + RUN_NUMBER))
          echo "::set-output name=version::$VERSION_CODE"
        
      # - name: Generationg Changelog and Version name
      #   id: changelog
      #   uses: TriPSs/conventional-changelog-action@v3
      #   with:
      #     github-token: ${{ secrets.GH_TOKEN_ACTION }}
      #     output-file: br_ipti_tag_app/CHANGELOG.md
      #     version-file: br_ipti_tag_app/pubspec.yaml
      
      - name: Download pub dependencies
        run: flutter pub get

      - name: Decode Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties


      - name: Setup firebase      
        run: |
          sudo npm install -g firebase-tools
          
      - name: Clone supercharge docs repository
        uses: actions/checkout@v2        
        with:
          repository: exaby73/flutterfire_cli           
          ref: 'feature/token-option'
          path: 'flutterfire'
        
      - name: Setup flutterfire      
        working-directory: ${{ github.workspace }}/flutterfire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite

      - name: Configure Flutterfire 
        working-directory: ./br_ipti_tag_app
        run: |          
          flutterfire configure --project="br-org-ipti-tag" --platforms='android,ios,web,linux,windows' --android-package-name=br.org.ipti.tag --ios-bundle-id=br.org.ipti.tag --macos-bundle-id=br.org.ipti.tag --token=${{ secrets.FIREBASE_TOKEN }} -y

      - name: Build Android App Bundle
        working-directory: ./br_ipti_tag_app
        run: flutter build appbundle --build-number=${{ steps.version_code.outputs.version }}
      
      - name: Upload app bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: ${{ github.workspace }}/br_ipti_tag_app/build/app/outputs/bundle/release/app-release.aab                

  # deploy:
  #   name: Deploy to Google Play
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2

  #     - name: Decode Service Account Key JSON File
  #       uses: timheuer/base64-to-file@v1
  #       id: service_account_json_file
  #       with:
  #         fileName: "serviceAccount.json"
  #         encodedString: ${{ secrets.GOOGLE_SERVICE_JSON_BASE64 }}

  #     - name: Setup Ruby
  #       uses: actions/setup-ruby@v1
  #       with:
  #         ruby-version: '2.6'

  #     - name: Cache bundle dependencies        
  #       uses: actions/cache@v2
  #       with:
  #         path: vendor/bundle
  #         key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
  #         restore-keys: ${{ runner.os }}-gems-      
          
  #     - name: Download bundle dependencies
  #       working-directory: ./br_ipti_tag_app/android
  #       run: |          
  #         gem install bundler:2.0.2
  #         bundle config path vendor/bundle
  #         bundle install
      
  #     - name: Get appbundle from artifacts
  #       id: download
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: appbundle
      
  #     - name: Release On Firebase App Distribution
  #       working-directory: ./br_ipti_tag_app/android
  #       uses: wzieba/Firebase-Distribution-Github-Action@v1.0.0
  #       with:
  #         appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
  #         token: ${{secrets.FIREBASE_TOKEN}}          
  #         file: ${{ steps.download.outputs.download-path }}/app-release.aab
      
  #     # - name: Release to Google Play (internal)
  #     #   env:
  #     #     SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
  #     #     SUPPLY_JSON_KEY: ${{ steps.service_account_json_file.outputs.filePath }}
  #     #   working-directory: ./br_ipti_tag_app/android
  #     #   run: |          
  #     #     bundle exec fastlane supply \
  #     #     --aab ${{ steps.download.outputs.download-path }}/app-release.aab \
  #     #     --track internal

          