name: Deploy for Internal Test
on:
  push:
    branches:
      - develop
      - 'ci/deploy_playstore'
    paths-ignore:
      - '**/README.md'
  pull_request:
    branches: [develop]
  workflow_dispatch:

env:
  flutter_version: "2.10.4"

jobs:
  before-build:
    name: Generate Firebase Files
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./br_ipti_tag_app
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1

      - name: Setup Firebase-tools
        run: |
          sudo npm install -g firebase-tools
          
      - name: Clone flutterfire_cli docs repository
        uses: actions/checkout@v2        
        with:
          repository: exaby73/flutterfire_cli           
          ref: 'feature/token-option'
          path: 'flutterfire'
        
      - name: Setup Flutterfire
        working-directory: ${{ github.workspace }}/flutterfire
        run: |
          dart pub global activate --source="path" . --executable="flutterfire" --overwrite

      - name: Generate Firebase Configuration Files
        working-directory: ./br_ipti_tag_app
        run: |          
          flutterfire configure --project="br-org-ipti-tag" --platforms='android,ios,web' --android-package-name=${{secrets.ANDROID_PACKAGE_NAME}} --ios-bundle-id=br.org.ipti.tag --macos-bundle-id=br.org.ipti.tag --token=${{ secrets.FIREBASE_TOKEN }} -y
      
      - name: Upload folder to build
        uses: actions/upload-artifact@v3
        with:
          name: project_folder
          path: ${{ github.workspace }}

################ Start Android pipeline ################## 

  build-android:
    name: Build Android
    needs: before-build   
    runs-on: ubuntu-latest
    steps:
      - name: Get project folder from artifacts
        id: project-folder
        uses: actions/download-artifact@v2
        with:
          name: project_folder
          

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Setup Flutter        
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
          
      - name: Decode Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      
      - name: Create key.properties
        working-directory: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
      
      - name: Download pub dependencies
        working-directory: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app
        run: flutter pub get

      - name: Build Android App Bundle
        working-directory: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app
        run: flutter build appbundle
      
      - name: Upload Android App Bundle
        uses: actions/upload-artifact@v2
        with:
          name: appbundle
          path: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app/build/app/outputs/bundle/release/app-release.aab       

  android-deploy:
    name: Deploy Android to App Distribution
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Get appbundle from artifacts
        id: appbundle-download
        uses: actions/download-artifact@v2
        with:
          name: appbundle
      
      - name: Release on Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.3.3     
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}          
          groups: teste-interno
          file: ${{ steps.appbundle-download.outputs.download-path }}/app-release.aab

################ End Android pipeline ##################

################ Start Web pipeline ##################

  build-web:
    name: Build Web
    needs: before-build   
    runs-on: ubuntu-latest
    steps:
      - name: Get project folder from artifacts
        id: project-folder
        uses: actions/download-artifact@v2
        with:
          name: project_folder
      
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Setup Flutter        
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.flutter_version }}
          
      - name: Download pub dependencies
        working-directory: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app
        run: flutter pub get

      - name: Build Web App
        working-directory: ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app
        run: flutter build web --release
      
      - name: Upload Web App Bundle
        uses: actions/upload-artifact@v2
        with:
          name: webbundle
          path: |
            ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app/build/web/
            ${{ steps.project-folder.outputs.download-path }}/br_ipti_tag_app/firebase.json       
  
  web-deploy:
    name: Deploy to Firebase Hosting
    needs: build-web   
    runs-on: ubuntu-latest
    steps:
      - name: Get Web Bundle from artifacts
        id: webbundle
        uses: actions/download-artifact@v2
        with:
          name: webbundle

      - name: List Files Downloaded
        run: ls -R
      
      - name: Deploy to Firebase Hosting 
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_BR_ORG_IPTI_TAG }}'
          projectId: br-org-ipti-tag
          expires: 30d
          channelId: internal
          
################ End Web pipeline ##################